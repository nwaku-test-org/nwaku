name: Upload Release Asset

on:
  push:
    branches:
      - '*'
  
  workflow_dispatch:
    
jobs:
  build-and-upload:
    strategy:
      matrix:
        env:
          - { NPROC: 2 }
        platform: [ubuntu-latest] #, macos-latest
    runs-on: ${{ matrix.platform }}
    env: ${{ matrix.env }}
    timeout-minutes: 60

    name: ${{ matrix.platform }} - ${{ matrix.env.NPROC }} processes

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

        # We need to do this because of how github cache works
        # I am not sure we can move the cache file, so if we do not do this
        # make update breaks because the cached compiler is there where the submodules
        # are meant to go.
      - name: Submodules Hash
        id: submodules
        run: |
          echo "hash=$(git submodule status | sha256sum | sed 's/[ -]*//g')" >> $GITHUB_OUTPUT

      - name: Cache Vendor
        uses: actions/cache@v1
        with:
          path: ${{ runner.os }}-vendor-${{ steps.submodules.outputs.hash }}.tgz
          key: ${{ runner.os }}-vendor-${{ steps.submodules.outputs.hash }}

      - name: Unpack Vendor
        run: |
          tar xzf ${{ runner.os }}-vendor-${{ steps.submodules.outputs.hash }}.tgz ||\
          (git submodule update --init --recursive && tar czf ${{ runner.os }}-vendor-${{ steps.submodules.outputs.hash }}.tgz vendor/)

      - name: Install dependencies
        run: |
          make -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC}" QUICK_AND_DIRTY_COMPILER=1 V=1 update
          make -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC}" QUICK_AND_DIRTY_COMPILER=1 V=1 dist
          ls ./build/
          tar -cvzf nim-waku-${{ matrix.platform }}.tar.gz ./build/

      - name: Upload asset
        uses: actions/upload-artifact@v2.2.3
        with:
          name: nim-waku-${{ matrix.platform }}.tar.gz
          path: nim-waku-${{ matrix.platform }}.tar.gz
          if-no-files-found: error
