name: Release Candidate

on:
  push:
    tags:
    - 'v*-rc.*' # "e.g. v0.4"
  workflow_dispatch:

env:
  RELEASE_NAME: nightly

  NPROC: 2
  MAKEFLAGS: "-j${NPROC}"
  NIMFLAGS: "--parallelBuild:${NPROC}"

jobs:
  build-and-publish:
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [amd64]
        experimental: [false]
      
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get submodules hash
        id: submodules
        run: |
          echo "hash=$(git submodule status | awk '{print $1}' | sort | shasum -a 256 | sed 's/[ -]*//g')" >> $GITHUB_OUTPUT

      - name: Cache submodules
        uses: actions/cache@v3
        with:
          path: |
            vendor/
            .git/modules
          key: ${{ runner.os }}-vendor-modules-${{matrix.arch}}-${{ steps.submodules.outputs.hash }}


      - name: prep variables
        id: vars
        run: |
          ARCH=${{matrix.arch}} 
          EXPERIMENTAL=$([[ "${{ matrix.experimental }}" == "true" ]] && echo "-experimental" || echo "")
          TAG=$([[ "${{github.ref}}" == "refs/heads/master" ]] && echo "${{env.RELEASE_NAME}}" || echo ${{github.ref}} | sed 's#refs/tags/##')


          echo "arch=${ARCH}" >> $GITHUB_OUTPUT
          echo "experimental=${EXPERIMENTAL}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

          NWAKU_ARTIFACT_NAME=$(echo "nwaku${EXPERIMENTAL}-${ARCH}-${{runner.os}}-${TAG}.tar.gz" | tr "[:upper:]" "[:lower:]")
          NWAKU_TOOLS_ARTIFACT_NAME=$(echo "nwaku-tools${EXPERIMENTAL}-${ARCH}-${{runner.os}}-${TAG}.tar.gz" | tr "[:upper:]" "[:lower:]")

          echo "nwaku=${NWAKU_ARTIFACT_NAME}" >> $GITHUB_OUTPUT
          echo "nwakutools=${NWAKU_TOOLS_ARTIFACT_NAME}" >> $GITHUB_OUTPUT


      - name: build artifacts
        id: build
        run: |
          OS=$([[ "${{runner.os}}" == "macOS" ]] && echo "macosx" || echo "linux")

          make QUICK_AND_DIRTY_COMPILER=1 V=1 CI=false EXPERIMENTAL=${{matrix.experimental}} NIMFLAGS="-d:disableMarchNative --os:${OS} --cpu:${{matrix.arch}}" wakunode2 tools
        
          tar -cvzf ${{steps.vars.outputs.nwaku}} ./build/wakunode2
          tar -cvzf ${{steps.vars.outputs.nwakutools}} ./build/wakucanary ./build/networkmonitor

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wakunode2
          path: ${{steps.vars.outputs.nwaku}}
          retention-days: 2

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tools
          path: ${{steps.vars.outputs.nwakutools}}
          retention-days: 2

  create-release-candidate:
    runs-on: ubuntu-latest
    needs: [ build-and-publish ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master
      - name: download artifacts
        uses: actions/download-artifact@v2
      - name: generate release notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release view ${{steps.vars.outputs.tag}} &>/dev/null &&\
            gh release delete -y ${{steps.vars.outputs.tag}} --cleanup-tag &&\
            git tag -d ${{steps.vars.outputs.tag}}

          docker run \
              -t \
              --rm \
              -v ${PWD}:/opt/sv4git/repo:z \
              -u $(id -u) \
              docker.io/wakuorg/sv4git:latest \
                release-notes |\
                sed -E 's@#([0-9]+)@[#\1](https://github.com/waku-org/nwaku/issues/\1)@g' > release_notes.md

          sed -i "s/^## .*/Generated at $(date)/" release_notes.md

          cat release_notes.md

          gh release create ${{steps.vars.outputs.tag}} --prerelease  --target ${{github.ref}} \
            --title ${{steps.vars.outputs.tag}} --notes-file release_notes.md \
            wakunode2/* tools/*

